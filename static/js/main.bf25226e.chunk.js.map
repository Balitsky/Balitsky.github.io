{"version":3,"sources":["components/AudioStream.tsx","WSAudio.ts","assets/loading.gif","assets/snowflake/snowflake_1.png","assets/snowflake/snowflake_2.png","assets/snowflake/snowflake_3.png","components/Background.tsx","components/WelcomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mute","ServerAudioAPI","url","Promise","resolve","reject","ws","WebSocket","onopen","onerror","ev","close","AudioDataWrapper","audioBlob","onmessage","m","Blob","data","this","LoopAudio","wrapper","audioElem","audio","Audio","callback","waitData","src","URL","createObjectURL","play","onended","setTimeout","shift","flag","muted","AudioData","connect","then","AudioStream","useState","pending","setPending","enable","setEnable","lopper","catch","finally","useEffect","className","loading","alt","onClick","Background","options","particles","number","value","density","value_area","color","shape","type","images","snowflake1","snowflake2","snowflake3","stroke","width","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","minimumValue","size_min","line_linked","distance","move","direction","straight","out_mode","attract","rotateX","rotateY","retina_detect","WelcomePage","children","appear","setAppear","showChildren","setShowChildren","Fade","in","timeout","enter","exit","onExited","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf25226e.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport AudioData from '../WSAudio'\r\nimport loading from '../assets/loading.gif'\r\n\r\nlet mute: (mute: boolean) => void\r\n\r\nconst AudioStream: React.FC = () => {\r\n    let [pending, setPending] = useState<boolean>(false)\r\n    let [enable, setEnable] = useState<boolean>(true)\r\n\r\n    const connect = () => {\r\n        setPending(true)\r\n        AudioData()\r\n            .then(lopper => {\r\n                mute = (flag: boolean) => lopper.mute(flag)\r\n                setEnable(true)\r\n            })\r\n            .catch(() => setEnable(false))\r\n            .finally(() => setPending(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n        connect()\r\n    }, [])\r\n\r\n    return (\r\n        pending ?\r\n            <>\r\n                <h1 className=\"pending\">PENDING</h1>\r\n                <img className='loading' src={loading} alt='loading'/>\r\n            </>\r\n            :\r\n            enable ?\r\n                <div>\r\n                    <button className=\"button waves-effect waves-light btn-large blue darken-1\"\r\n                            onClick={() => {\r\n                                mute(false)\r\n                            }}>Play</button>\r\n                    <button className=\"button waves-effect waves-light btn-large blue darken-1\"\r\n                            onClick={() => mute(true)}>Mute</button>\r\n                </div>\r\n                :\r\n                <>\r\n                    <h1 className=\"not_available_data\">Sorry, data not available</h1>\r\n                    <button className=\"button waves-effect waves-light btn-large blue darken-1\"\r\n                            onClick={connect}>Try to connect\r\n                    </button>\r\n                </>\r\n    )\r\n}\r\n\r\nexport default AudioStream","class ServerAudioAPI {\r\n    public static connect(url: string): Promise<WebSocket> {\r\n        return new Promise<WebSocket>((resolve, reject) => {\r\n            let ws: WebSocket = new WebSocket(url)\r\n            ws.onopen = () => resolve(ws)\r\n            ws.onerror = (ev) => {\r\n                ws.close()\r\n                reject(ev)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nclass AudioDataWrapper {\r\n    private audioBlob: Blob[] = [];\r\n\r\n    constructor(ws: WebSocket) {\r\n        ws.onmessage = (m: MessageEvent) => {\r\n            this.audioBlob = [new Blob([...this.audioBlob, m.data])]\r\n        }\r\n    }\r\n\r\n    public data(): Blob[] {\r\n        return this.audioBlob\r\n    }\r\n}\r\n\r\nclass LoopAudio {\r\n    private audioElem: HTMLAudioElement\r\n\r\n    constructor(wrapper: AudioDataWrapper) {\r\n        let audio = this.audioElem = new Audio()\r\n        let callback = () => this.waitData(wrapper, (data: Blob) => {\r\n            audio.src = URL.createObjectURL(data)\r\n            audio.play()\r\n        })\r\n\r\n        audio.onended = callback\r\n        setTimeout(callback, 200)\r\n    }\r\n\r\n    private waitData(wrapper: AudioDataWrapper, callback: (data: Blob) => void): void {\r\n        let data = wrapper.data().shift()\r\n        data ? callback(data)\r\n            : setTimeout(() => this.waitData(wrapper, callback), 200)\r\n    }\r\n\r\n    public mute(flag: boolean): void {\r\n        this.audioElem.muted = flag\r\n    }\r\n}\r\n\r\nconst AudioData = () => {\r\n    return ServerAudioAPI.connect('ws://localhost:8800')\r\n        .then(ws => new AudioDataWrapper(ws))\r\n        .then(wrapper => new LoopAudio(wrapper))\r\n}\r\nexport default AudioData","export default __webpack_public_path__ + \"static/media/loading.b0232c0e.gif\";","export default __webpack_public_path__ + \"static/media/snowflake_1.f28d63b4.png\";","export default __webpack_public_path__ + \"static/media/snowflake_2.2640d050.png\";","export default __webpack_public_path__ + \"static/media/snowflake_3.757750d8.png\";","import React from \"react\"\r\nimport Particles from \"react-tsparticles\"\r\nimport snowflake1 from '../assets/snowflake/snowflake_1.png'\r\nimport snowflake2 from '../assets/snowflake/snowflake_2.png'\r\nimport snowflake3 from '../assets/snowflake/snowflake_3.png'\r\n\r\n\r\nconst Background: React.FC = () => {\r\n    return (\r\n        <>\r\n            <div className=\"back_img\"/>\r\n            <Particles className=\"snow\"\r\n                       options={{\r\n                           particles: {\r\n                               number: {\r\n                                   value: 250,\r\n                                   density: {\r\n                                       enable: true,\r\n                                       value_area: 800\r\n                                   }\r\n                               },\r\n                               color: {\r\n                                   value: \"#ffffff\"\r\n                               },\r\n                               shape: {\r\n                                   type: \"images\",\r\n                                   images: [\r\n                                       {\r\n                                           src: snowflake1\r\n                                       },\r\n                                       {\r\n                                           src: snowflake2\r\n                                       },\r\n                                       {\r\n                                           src: snowflake3\r\n                                       }\r\n                                   ],\r\n                                   stroke: {\r\n                                       width: 0,\r\n                                       color: \"#000000\"\r\n                                   },\r\n                                   polygon: {\r\n                                       nb_sides: 5\r\n                                   }\r\n                               },\r\n                               opacity: {\r\n                                   value: 1,\r\n                                   random: false,\r\n                                   anim: {\r\n                                       enable: false,\r\n                                       speed: 1,\r\n                                       opacity_min: 0.1,\r\n                                       sync: false\r\n                                   }\r\n                               },\r\n                               size: {\r\n                                   value: 7,\r\n                                   random: {\r\n                                       enable: true,\r\n                                       minimumValue: 4\r\n                                   },\r\n                                   anim: {\r\n                                       enable: false,\r\n                                       speed: 1,\r\n                                       size_min: 4,\r\n                                       sync: false\r\n                                   }\r\n                               },\r\n                               line_linked: {\r\n                                   enable: false,\r\n                                   distance: 150,\r\n                                   color: \"#ffffff\",\r\n                                   opacity: 0.4,\r\n                                   width: 1\r\n                               },\r\n                               move: {\r\n                                   enable: true,\r\n                                   speed: 3,\r\n                                   direction: \"bottom\",\r\n                                   random: false,\r\n                                   straight: false,\r\n                                   out_mode: \"out\",\r\n                                   attract: {\r\n                                       enable: false,\r\n                                       rotateX: 600,\r\n                                       rotateY: 1200\r\n                                   }\r\n                               }\r\n                           },\r\n                           retina_detect: true\r\n                       }}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Background","import React, {useState} from \"react\";\r\nimport Fade from '@material-ui/core/Fade'\r\n\r\nconst WelcomePage: React.FC = ({children}) => {\r\n    let [appear, setAppear] = useState<boolean>(true)\r\n    let [showChildren, setShowChildren] = useState<boolean>(false)\r\n\r\n    return (\r\n        <>\r\n            {showChildren ? children : <></>}\r\n            <Fade in={appear} timeout={{enter: 0, exit: 1000}} onExited={() => setShowChildren(true)}>\r\n                <div id=\"welcome_container\" className=\"welcome\">\r\n                    <div className=\"overlay\"/>\r\n                    <h1 className=\"text\">Merry Christmas & Happy New Year</h1>\r\n                    <button className=\"button waves-effect waves-light btn-large blue darken-1\"\r\n                            onClick={() => setAppear(false)}>lets party\r\n                    </button>\r\n                </div>\r\n            </Fade>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WelcomePage","import React from 'react';\nimport './App.css';\nimport AudioStream from \"./components/AudioStream\";\nimport Background from \"./components/Background\";\nimport WelcomePage from \"./components/WelcomePage\";\n\nfunction App() {\n    return (\n        <>\n            <Background/>\n            <WelcomePage>\n                <AudioStream/>\n            </WelcomePage>\n        </>\n    );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}